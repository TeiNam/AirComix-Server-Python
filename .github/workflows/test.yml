name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11, 3.12]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y unrar-free

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"
        
    - name: Verify installation
      run: |
        python -c "import app; print('App module imported successfully')"
        python -c "import pytest; print('Pytest imported successfully')"

    - name: Create test manga directory
      run: |
        mkdir -p /tmp/test-comix
        echo "test" > /tmp/test-comix/test.txt
        chmod 755 /tmp/test-comix
        ls -la /tmp/test-comix

    - name: Debug test environment
      run: |
        echo "=== Python version ==="
        python --version
        echo "=== Current directory ==="
        pwd
        echo "=== Directory contents ==="
        ls -la
        echo "=== App module check ==="
        python -c "import sys; print('Python path:', sys.path)"
        echo "=== Test directory contents ==="
        ls -la tests/ || echo "No tests directory"
        
    - name: Simple import test
      env:
        COMIX_MANGA_DIRECTORY: /tmp/test-comix
        COMIX_DEBUG_MODE: true
        PYTEST_CURRENT_TEST: true
      run: |
        echo "=== Testing basic imports ==="
        python -c "
        import sys
        sys.path.insert(0, '.')
        try:
            from app.models.config import Settings
            print('✅ Settings import successful')
        except Exception as e:
            print(f'❌ Settings import failed: {e}')
            
        try:
            from app.main import create_app
            print('✅ create_app import successful')
        except Exception as e:
            print(f'❌ create_app import failed: {e}')
        "
        
    - name: Run simple tests first
      env:
        COMIX_MANGA_DIRECTORY: /tmp/test-comix
        COMIX_DEBUG_MODE: true
        PYTEST_CURRENT_TEST: true
        PYTHONPATH: .
      run: |
        echo "=== Running simple tests ==="
        python -m pytest tests/test_simple.py -v --tb=long
        
    - name: Run all tests
      env:
        COMIX_MANGA_DIRECTORY: /tmp/test-comix
        COMIX_DEBUG_MODE: true
        PYTEST_CURRENT_TEST: true
        PYTHONPATH: .
      run: |
        echo "=== Running all tests ==="
        python -m pytest tests/ -v --tb=short --maxfail=3

    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      if: matrix.python-version == '3.11'
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"

    - name: Run linting
      continue-on-error: true
      run: |
        echo "=== Black 포매팅 체크 ==="
        black --check app/ tests/ || echo "❌ Black formatting issues found"
        
        echo "=== isort import 정렬 체크 ==="
        isort --check-only app/ tests/ || echo "❌ Import sorting issues found"
        
        echo "=== flake8 린팅 ==="
        flake8 app/ tests/ --max-line-length=88 --extend-ignore=E203,W503 || echo "❌ Flake8 issues found"
        
        echo "=== mypy 타입 체크 ==="
        mypy app/ --ignore-missing-imports || echo "❌ MyPy issues found"
        
        echo "✅ Linting completed (some issues may exist)"