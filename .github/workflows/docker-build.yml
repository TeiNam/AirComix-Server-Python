name: Docker Build and Push

on:
  push:
    branches:
      - main
      - develop
    tags:
      - 'v*'
  pull_request:
    branches:
      - main
  workflow_run:
    workflows: ["Auto Tag and Release"]
    types:
      - completed

env:
  REGISTRY: docker.io
  IMAGE_NAME: aircomix-server

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Debug - Check secrets
      if: github.event_name != 'pull_request'
      run: |
        echo "Docker username length: ${#DOCKER_USERNAME}"
        echo "Docker token length: ${#DOCKER_TOKEN}"
        echo "Docker username (masked): ${DOCKER_USERNAME:0:3}***"
        if [ -z "$DOCKER_USERNAME" ]; then
          echo "❌ DOCKER_USERNAME is empty or not set"
          exit 1
        fi
        if [ -z "$DOCKER_TOKEN" ]; then
          echo "❌ DOCKER_TOKEN is empty or not set"
          exit 1
        fi
        echo "✅ Both secrets are set"
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
        DOCKER_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Log in to Docker Hub (Manual)
      if: github.event_name != 'pull_request'
      run: |
        echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
      
    - name: Log in to Docker Hub (Action)
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Get version info
      id: version
      run: |
        if [[ $GITHUB_REF == refs/tags/* ]]; then
          VERSION=${GITHUB_REF#refs/tags/}
        else
          VERSION=$(git describe --tags --always --dirty 2>/dev/null || echo "dev-$(date +%Y%m%d)")
        fi
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "Version: $VERSION"

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: docker.io/${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}
          type=raw,value=latest,enable={{is_default_branch}}
        labels: |
          org.opencontainers.image.title=AirComix Server
          org.opencontainers.image.description=Comic book streaming server compatible with AirComix iOS app
          org.opencontainers.image.version=${{ steps.version.outputs.version }}
          org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
          org.opencontainers.image.revision=${{ github.sha }}
          org.opencontainers.image.created=${{ github.event.repository.updated_at }}

    - name: Build and test Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./docker/Dockerfile
        platforms: linux/amd64,linux/arm64
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        build-args: |
          BUILDKIT_INLINE_CACHE=1
          
    - name: Test Docker image
      if: github.event_name != 'pull_request'
      run: |
        echo "🧪 Docker 이미지 기본 테스트"
        # 임시 컨테이너로 헬스체크 테스트
        docker run --rm -d --name test-container -p 31259:31257 \
          -e COMIX_MANGA_DIRECTORY=/tmp \
          -e COMIX_DEBUG_MODE=true \
          ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest || true
        
        sleep 10
        
        # 헬스체크 테스트
        curl -f http://localhost:31259/health || echo "Health check failed"
        
        # 컨테이너 정리
        docker stop test-container || true

    - name: Build development image
      if: github.ref == 'refs/heads/develop'
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./docker/Dockerfile.dev
        platforms: linux/amd64,linux/arm64
        push: true
        tags: docker.io/${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:dev
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max