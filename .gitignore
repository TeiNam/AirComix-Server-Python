### VirtualEnv template
# Virtualenv
# http://iamzed.com/2009/05/07/a-primer-on-virtualenv/
.Python
[Bb]in
[Ii]nclude
[Ll]ib
[Ll]ib64
[Ll]ocal
[Ss]cripts
pyvenv.cfg
pip-selfcheck.json

### Zsh template
# Zsh compiled script + zrecompile backup
*.zwc
*.zwc.old

# Zsh completion-optimization dumpfile
*zcompdump*

# Zsh history
.zsh_history

# Zsh sessions
.zsh_sessions

# Zsh zcalc history
.zcalc_history

# A popular plugin manager's files
._zinit
.zinit_lstupd

# zdharma/zshelldoc tool's files
zsdoc/data

# robbyrussell/oh-my-zsh/plugins/per-directory-history plugin's files
# (when set-up to store the history in the local directory)
.directory_history

# MichaelAquilina/zsh-autoswitch-virtualenv plugin's files
# (for Zsh plugins using Python)
#.venv

# Zunit tests' output
/tests/_output/*
!/tests/_output/.gitkeep

### Python template
# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/latest/usage/project/#working-with-version-control
.pdm.toml
.pdm-python
.pdm-build/

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
#.venv
env/
#venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
.idea/

# Project specific files and directories
php_origins/                    # Original PHP server code (reference only)
.kiro/                         # Kiro IDE configuration (user-specific)

# Test data and results
test_archives/                 # Test archive files (can be large)
test_complete_data/           # Complete test datasets (can be large)
test_sample_data/             # Sample test data (can be large)
test-results/                 # Test execution results
*.test.zip                    # Test archive files
*.test.rar                    # Test archive files

# Environment and configuration files
.env                          # Environment variables (may contain secrets)
.env.local                    # Local environment overrides
.env.production              # Production environment (may contain secrets)
docker/.env                  # Docker environment file (may contain paths)

# Runtime and temporary files
*.pid                        # Process ID files
*.sock                       # Socket files
*.tmp                        # Temporary files
tmp/                         # Temporary directory
temp/                        # Temporary directory

# Logs and monitoring
logs/                        # Log directory
*.log                        # Log files
access.log*                  # Access logs
error.log*                   # Error logs
debug.log*                   # Debug logs

# OS specific files
.DS_Store                    # macOS
.DS_Store?                   # macOS
._*                          # macOS
.Spotlight-V100              # macOS
.Trashes                     # macOS
ehthumbs.db                  # Windows
Thumbs.db                    # Windows
Desktop.ini                  # Windows

# Editor and IDE files
.vscode/                     # VS Code settings (user-specific)
*.swp                        # Vim swap files
*.swo                        # Vim swap files
*~                           # Backup files

# Docker and deployment
docker-compose.override.yml  # Local docker overrides
.dockerignore               # May contain sensitive paths

# Backup and archive files
*.bak                        # Backup files
*.backup                     # Backup files
*.old                        # Old files
backup/                      # Backup directory
backups/                     # Backup directory

# Development and debugging
profile.stats               # Python profiling results
.coverage.*                 # Coverage data files
htmlcov/                    # Coverage HTML reports
.pytest_cache/              # Pytest cache
.mypy_cache/                # MyPy cache

# Package and distribution
*.egg-info/                 # Package info
dist/                       # Distribution files
build/                      # Build files

# User data directories (manga collections)
manga/                      # Default manga directory
comics/                     # Alternative comics directory
collection/                 # Alternative collection directory# 
Development artifacts
node_modules/               # If any Node.js tools are used
.npm/                       # NPM cache
package-lock.json          # NPM lock file (if not using Node.js)
yarn.lock                  # Yarn lock file (if not using Yarn)

# Performance and monitoring
*.prof                     # Profiling files
*.trace                    # Trace files
memory_profiler_*.dat      # Memory profiler data

# Security and secrets
secrets/                   # Secrets directory
*.key                      # Private keys
*.pem                      # Certificate files
*.crt                      # Certificate files
*.p12                      # Certificate files
config/secrets.yml         # Secret configuration
.secrets                   # Hidden secrets file

# Database files (if any local DB is used)
*.db                       # Database files
*.sqlite                   # SQLite databases
*.sqlite3                  # SQLite databases

# Cache directories
.cache/                    # General cache
__pycache__/              # Python cache (already included above)
.pytest_cache/            # Pytest cache (already included above)

# Local development overrides
docker-compose.local.yml   # Local docker compose overrides
Makefile.local            # Local Makefile overrides
local_settings.py         # Local Django-style settings
settings_local.py         # Local settings

# Documentation build artifacts
docs/_build/              # Sphinx build (already included above)
docs/build/               # Alternative docs build
site/                     # MkDocs build (already included above)

# Jupyter notebooks (if used for analysis)
.ipynb_checkpoints/       # Jupyter checkpoints (already included above)
*.ipynb                   # Jupyter notebooks (comment out if you want to include them)

# Large media files that shouldn't be in git
*.zip                     # Archive files (except essential ones)
*.rar                     # Archive files (except essential ones)
*.7z                      # Archive files
*.tar.gz                  # Archive files
*.tgz                     # Archive files
*.iso                     # ISO files
*.dmg                     # macOS disk images
*.exe                     # Windows executables
*.msi                     # Windows installers

# But allow essential archive files in specific directories
!tests/fixtures/*.zip     # Allow test fixture archives
!tests/fixtures/*.rar     # Allow test fixture archives
!examples/**/*.zip        # Allow example archives
!examples/**/*.rar        # Allow example archives